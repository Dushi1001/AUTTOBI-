The Netlify deploy errored. The relevant error log line information is:

Line 0: build-image version: c38927cce92092afc316743af1f8656a643fa4a5 (noble)
Line 1: buildbot version: 766d2c1ac7b7596f18b546cb6bf13962d157b033
Line 2: Fetching cached dependencies
Line 3: Failed to fetch cache, continuing with build
Line 4: Starting to prepare the repo for build
Line 5: No cached dependencies found. Cloning fresh repo
Line 6: git clone --filter=blob:none https://github.com/Dushi1001/AUTTOBI-
Line 7: Preparing Git Reference refs/heads/main
Line 8: Custom build command detected. Proceeding with the specified command: 'bash netlify/build.sh'
Line 9: Starting to install dependencies
Line 10: Python version set to 3.13.3
Line 11: Ruby version set to 2.7.2
Line 12: [2mmise[0m [34mgo[0m@1.19         install
Line 13: [2mmise[0m [34mgo[0m@1.19         download go1.19.linux-amd64.tar.gz
Line 147: ▲ [WARNING] The CommonJS "module" variable is treated as a global variable in an ECMAScript module and may not work as expected 
Line 148:     netlify/functions/api.js:296:0:
Line 149:       296 │ module.exports.handler = serverless(app);
Line 150:           ╵ ~~~~~~
Line 151:   This file is considered to be an ECMAScript module because the enclosing "package.json" file sets the type of this file to "mo
Line 152:     package.json:4:10:
Line 153:       4 │   "type": "module",
Line 154:         ╵           ~~~~~~~~
Line 155:   Node's package format requires that CommonJS files in a "type": "module" package use the ".cjs" file extension.
Line 156: 1 warning
Line 157:   netlify/functions-dist/api.js  1.4mb ⚠️
Line 158: ⚡ Done in 83ms
Line 159: Build completed successfully!
Line 160: npm warn EBADENGINE Unsupported engine {
Line 161: npm warn EBADENGINE   package: 'react-router@7.5.3',
Line 162: npm warn EBADENGINE   required: { node: '>=20.0.0' },
Line 163: npm warn EBADENGINE   current: { node: 'v18.20.8', npm: '10.8.2' }
Line 164: npm warn EBADENGINE }
Line 165: npm warn EBADENGINE Unsupported engine {
Line 166: npm warn EBADENGINE   package: 'react-router-dom@7.5.3',
Line 167: npm warn EBADENGINE   required: { node: '>=20.0.0' },
Line 181: [36mvite v5.4.14 [32mbuilding for production...[36m[39m
Line 182: transforming...
Line 183: Browserslist: browsers data (caniuse-lite) is 6 months old. Please run:
Line 184:   npx update-browserslist-db@latest
Line 185:   Why you should do it regularly: https://github.com/browserslist/update-db#readme
Line 186: [32m✓[39m 1796 modules transformed.
Line 187: rendering chunks...
Line 188: computing gzip size...
Line 189: [2m../dist/public/[22m[32mindex.html                 [39m[1m[2m  0.82 kB[22m[1m[22m[2m │ gzip:   0.49 kB[22m
Line 190: [2m../dist/public/[22m[2massets/[22m[35mindex-Dp2kf9sb.css  [39m[1m[2m 81.38 kB[22m[1m[22m[2m │ gzip:  13.76 kB[22m
Line 191: Failed during stage 'building site': Build script returned non-zero exit code: 2
Line 192: [2m../dist/public/[22m[2massets/[22m[36mindex-j6eDZuhU.js   [39m[1m[33m738.61 kB[39m[22m[2m │ gzip: 233.68 kB[22m
Line 193: [33m
Line 194: (!) Some chunks are larger than 500 kB after minification. Consider:
Line 195: - Using dynamic import() to code-split the application
Line 196: - Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchun
Line 197: - Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.[39m
Line 198: [32m✓ built in 3.76s[39m
Line 199:   dist/index.js  35.6kb
Line 200: ⚡ Done in 9ms
Line 201: ​
Line 202: [90m(build.command completed in 12.1s)[39m
Line 203: [96m[1m​[22m[39m
Line 204: [96m[1mFunctions bundling                                            [22m[39m
Line 205: [96m[1m────────────────────────────────────────────────────────────────[22m[39m
Line 206: ​
Line 207: Packaging Functions from [36mnetlify/functions[39m directory:
Line 208:  - api.js
Line 209:  - hello.js
Line 210: ​
Line 211: [91m[1m​[22m[39m
Line 212: [91m[1mDependencies installation error                               [22m[39m
Line 213: [91m[1m────────────────────────────────────────────────────────────────[22m[39m
Line 214: ​
Line 215:   [31m[1mError message[22m[39m
Line 216:   A Netlify Function failed to require one of its dependencies.
Line 217:   Please make sure it is present in the site's top-level "package.json".
​
Line 218:   In file "/opt/build/repo/netlify/functions/api.js"
Line 219:   Cannot find module 'pg-native'
Line 220:   Require stack:
Line 221:   - /opt/buildhome/node-deps/node_modules/@netlify/zip-it-and-ship-it/dist/runtimes/node/bundlers/zisi/resolve.js
Line 222: ​
Line 223:   [31m[1mResolved config[22m[39m
Line 224:   build:
Line 225:     command: bash netlify/build.sh
Line 226:     commandOrigin: config
Line 227:     environment:
Line 228:       - NODE_VERSION
Line 229:       - NODE_PG_FORCE_NATIVE
Line 230:     publish: /opt/build/repo/dist
Line 231:     publishOrigin: config
Line 232:   functionsDirectory: /opt/build/repo/netlify/functions
Line 233:   redirects:
Line 234:     - from: /api/*
      status: 200
      to: /.netlify/functions/api/:splat
    - from: /*
      status: 200
      to: /index.
Line 235: Build failed due to a user error: Build script returned non-zero exit code: 2

Netlify has analyzed the error and provided the following guidance:

**Diagnosis:**
The build failed due to a user error where a Netlify Function (`api.js`) cannot find the module 'pg-native' which is a dependency.

**Solution:**
1. Verify that the 'pg-native' module is included in the site's top-level `package.json` or was committed to the repository.
2. If the module is missing, add 'pg-native' to the dependencies in `package.json`.

Verify the package is in package.json or the file was committed to the repo before adding the file to the external configuration.