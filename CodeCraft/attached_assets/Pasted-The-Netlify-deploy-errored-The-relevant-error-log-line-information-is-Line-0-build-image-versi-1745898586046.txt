The Netlify deploy errored. The relevant error log line information is:

Line 0: build-image version: c38927cce92092afc316743af1f8656a643fa4a5 (noble)
Line 1: buildbot version: 766d2c1ac7b7596f18b546cb6bf13962d157b033
Line 2: Fetching cached dependencies
Line 3: Failed to fetch cache, continuing with build
Line 4: Starting to prepare the repo for build
Line 5: No cached dependencies found. Cloning fresh repo
Line 6: git clone --filter=blob:none https://github.com/Dushi1001/AUTTOBI-
Line 7: Preparing Git Reference refs/heads/main
Line 8: Custom build command detected. Proceeding with the specified command: 'bash netlify/build.sh'
Line 9: Starting to install dependencies
Line 10: Python version set to 3.13.3
Line 11: Ruby version set to 2.7.2
Line 12: [2mmise[0m [34mgo[0m@1.19         install
Line 13: [2mmise[0m [34mgo[0m@1.19         download go1.19.linux-amd64.tar.gz
Line 147: ▲ [WARNING] The CommonJS "module" variable is treated as a global variable in an ECMAScript module and may not work as expected 
Line 148:     netlify/functions/api.js:295:0:
Line 149:       295 │ module.exports.handler = serverless(app);
Line 150:           ╵ ~~~~~~
Line 151:   This file is considered to be an ECMAScript module because the enclosing "package.json" file sets the type of this file to "mo
Line 152:     package.json:4:10:
Line 153:       4 │   "type": "module",
Line 154:         ╵           ~~~~~~~~
Line 155:   Node's package format requires that CommonJS files in a "type": "module" package use the ".cjs" file extension.
Line 156: 1 warning
Line 157:   netlify/functions-dist/api.js  1.4mb ⚠️
Line 158: ⚡ Done in 46ms
Line 159: Build completed successfully!
Line 160: ​
Line 161: [90m(build.command completed in 8.9s)[39m
Line 162: [96m[1m​[22m[39m
Line 163: [96m[1mFunctions bundling                                            [22m[39m
Line 164: [96m[1m────────────────────────────────────────────────────────────────[22m[39m
Line 165: ​
Line 166: Packaging Functions from [36mnetlify/functions[39m directory:
Line 167:  - api.js
Line 168:  - hello.js
Line 169: ​
Line 170: [91m[1m​[22m[39m
Line 171: [91m[1mDependencies installation error                               [22m[39m
Line 172: [91m[1m────────────────────────────────────────────────────────────────[22m[39m
Line 173: ​
Line 174:   [31m[1mError message[22m[39m
Line 175:   A Netlify Function failed to require one of its dependencies.
Line 176:   Please make sure it is present in the site's top-level "package.json".
​
Line 177:   In file "/opt/build/repo/netlify/functions/api.js"
Line 178:   Cannot find module 'pg-native'
Line 179:   Require stack:
Line 180:   - /opt/buildhome/node-deps/node_modules/@netlify/zip-it-and-ship-it/dist/runtimes/node/bundlers/zisi/resolve.js
Line 181: ​
Line 182:   [31m[1mResolved config[22m[39m
Line 183:   build:
Line 184:     command: bash netlify/build.sh
Line 185:     commandOrigin: config
Line 186:     environment:
Line 187:       - NODE_VERSION
Line 188:     publish: /opt/build/repo/dist
Line 189:     publishOrigin: config
Line 190:   functionsDirectory: /opt/build/repo/netlify/functions
Line 191:   redirects:
Line 192:     - from: /api/*
      status: 200
      to: /.netlify/functions/api/:splat
    - from: /*
      status: 200
      to: /index.
Line 193: Build failed due to a user error: Build script returned non-zero exit code: 2
Line 194: Failing build: Failed to build site
Line 195: Finished processing build request in 39.624s
Line 196: Failed during stage 'building site': Build script returned non-zero exit code: 2

Netlify has analyzed the error and provided the following guidance:

**Diagnosis:**
The build failed because a Netlify Function (`api.js`) is unable to require the `pg-native` module, leading to a "Dependencies installation error" #171.

**Solution:**
1. Verify that the `pg-native` module is listed in the top-level `package.json` of your site repository.
2. Ensure that the `pg-native` module is included in the dependencies of the project by checking the `package.json`.
3. If `pg-native` is missing, add it to the `dependencies` section of the `package.json` and commit the changes to the repository.